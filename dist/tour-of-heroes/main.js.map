{"version":3,"sources":["./src/environments/environment.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/message.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/data/mock-heroes.ts","./src/app/heroes/heroes.component.ts","./src/app/heroes/heroes.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/hero-detail/hero-detail.component.ts","./src/app/hero-detail/hero-detail.component.html","./src/app/hero.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss'],\n})\nexport class MessagesComponent implements OnInit {\n  /*\n    NOTE: IMPORTANT!\n    The messageService property must be public because\n    you're going to bind to it in the template.\n    Angular only [binds] to public component properties!\n  */\n  constructor(public messageService: MessageService) {}\n\n  ngOnInit(): void {}\n}\n","<!-- This template binds directly to the component's messageService public prop -->\n<div *ngIf=\"messageService.messages.length\">\n  <h2>Messages</h2>\n  <button class=\"clear\" (click)=\"messageService.clear()\">clear</button>\n  <div *ngFor=\"let message of messageService.messages\">{{ message }}</div>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  constructor() {} // MessageService to be injected in HeroService\n\n  add(message: string): void {\n    this.messages.push(message);\n  }\n\n  clear(): void {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../interfaces/hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) {}\n\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService\n      .getHeroes()\n      .subscribe((heroes) => (this.heroes = heroes.slice(0, 4))); // show only top 4 heroes\n  }\n}\n","<h3>Top Heroes</h3>\n\n<div class=\"grid grid-pad\">\n  <a\n    *ngFor=\"let hero of heroes\"\n    class=\"col-1-4\"\n    routerLink=\"/detail/{{ hero.id }}\"\n  >\n    <div class=\"module hero\">\n      <h4>{{ hero.name }}</h4>\n    </div>\n  </a>\n</div>\n","import { Hero } from '../interfaces/hero';\r\n\r\nexport const HEROES: Hero[] = [\r\n  { id: 11, name: 'Dr Nice' },\r\n  { id: 12, name: 'Narco' },\r\n  { id: 13, name: 'Bombasto' },\r\n  { id: 14, name: 'Celeritas' },\r\n  { id: 15, name: 'Magneta' },\r\n  { id: 16, name: 'RubberMan' },\r\n  { id: 17, name: 'Dynama' },\r\n  { id: 18, name: 'Dr IQ' },\r\n  { id: 19, name: 'Magma' },\r\n  { id: 20, name: 'Tornado' },\r\n];\r\n","import { Component, OnInit, Optional } from '@angular/core';\nimport { Hero } from '../interfaces/hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.scss'],\n  /* file vs. hardcoded */\n  // template: '<b>hardcoded Template</b>',\n  // styles: ['b { color:red; }'],\n})\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[];\n  // selected: Hero; // show html *ngIf selected populated\n\n  constructor(\n    /* NOTE:\n        While you could call getHeroes() in the constructor,\n        that's not the best practice.\n        Reserve the constructor for simple initialization\n        such as wiring constructor parameters to properties.\n        The constructor shouldn't do anything.\n        It certainly shouldn't call a function that makes HTTP\n        requests to a remote server as a real data service would.\n    */\n    // private messageService: MessageService,\n    @Optional() private heroService?: HeroService\n  ) {}\n\n  // hooks\n  ngOnInit(): void {\n    this.getHeroes(); // initialization (of props) logic\n  }\n\n  // async methods\n  getHeroes(): void {\n    // prettier-ignore\n    this.heroService.getHeroes() // : Observable<Hero[]>\n      .subscribe(heroes => this.heroes = heroes); // ...when fetched\n\n    /* NOTE:\n        The HeroesComponent consumes the getHeroes() result\n        as if heroes could be fetched synchronously.\n        This will not work in a real app...\n        fetching heroes from a remote server,\n        which is an inherently asynchronous operation.\n        HeroService.getHeroes() should return an Observable\n        because it will eventually use the Angular HttpClient.\n    */\n  }\n}\n","<h2>My Heroes</h2>\n\n<!-- list -->\n<ul class=\"heroes\">\n  <li *ngFor=\"let hero of heroes\">\n    <a routerLink=\"/detail/{{ hero.id }}\">\n      <span class=\"badge\">{{ hero.id }}</span> {{ hero.name }}\n    </a>\n  </li>\n</ul>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","<h1>{{ title }}</h1>\n\n<nav>\n  <a routerLink=\"/dashboard\">Dashboard</a>\n  <a routerLink=\"/heroes\">Heroes</a>\n</nav>\n<!-- Router -->\n<router-outlet></router-outlet>\n\n<app-messages></app-messages>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../interfaces/hero';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HeroService } from '../hero.service';\n/*\n  The location is an Angular service for interacting with the browser.\n  You'll use it later to navigate back to the view that navigated here.\n*/\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.scss'],\n})\nexport class HeroDetailComponent implements OnInit {\n  hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getHero();\n  }\n\n  // async method\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id'); // parsed\n\n    // prettier-ignore\n    this.heroService.getHero(id)\n      .subscribe((hero) => (this.hero = hero));\n  }\n\n  goBack(): void {\n    this.location.back(); // !dashboard != !heroes\n  }\n}\n","<section *ngIf=\"hero\">\n  <h2>{{ hero.name | uppercase }} Details</h2>\n  <div><span>id: </span>{{ hero.id }}</div>\n  <div>\n    <label\n      >name:\n      <input [(ngModel)]=\"hero.name\" placeholder=\"name\" />\n    </label>\n  </div>\n</section>\n\n<button (click)=\"goBack()\">go back</button>\n","import { Injectable } from '@angular/core';\nimport { Hero } from './interfaces/hero';\nimport { HEROES } from './data/mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n\n// Injectable decorator -> allows Dependency Injection\n@Injectable({\n  providedIn: 'root', // -> available in whole app tree\n})\nexport class HeroService {\n  // HeroService is a Dependency to be injected wherever it's needed\n  constructor(\n    // \"service-in-service\" scenario / MessageService in HeroService\n    private messageService: MessageService\n  ) {}\n\n  // async methodssss\n  getHeroes(): Observable<Hero[]> {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add('HeroService: fetched heroes');\n    return of(HEROES); // FIXME: mocks HttpClient.get<Hero[]>()\n  }\n\n  getHero(id: number): Observable<Hero> {\n    // TODO: send the message _after_ fetching the heroes\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(HEROES.find((hero) => hero.id === id)); // FIXME: mocks HttpClient.get<Hero[]>()\n  }\n}\n\n/*\nNOTE:\n  - Services are Singletons\n  - Angular DI has a hierarchical injection system\n    e.g. Angular can inject HeroListComponent with both\n    the HeroService provided in HeroComponent and\n    the UserService provided in AppModule.\n  - Designing a class with dependency injection makes the class easier to test.\n\n  https://angular.io/guide/dependency-injection\n*/\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nconst routes: Routes = [\n  { path: 'heroes', component: HeroesComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'detail/:id', component: HeroDetailComponent }, // parameterized route\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' }, // default\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}